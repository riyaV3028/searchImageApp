{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91870\\\\Desktop\\\\imageSearchApp1\\\\src\\\\components\\\\imageResults\\\\imageResults.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nconst ImageResults = ({\n  images\n}) => {\n  const [open, setOpen] = useState(false);\n  const [currentImg, setCurrentImg] = useState('');\n\n  const handleOpen = img => {\n    setOpen(true);\n    setCurrentImg(img);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let imageList;\n\n  if (images) {\n    imageList = /*#__PURE__*/React.createElement(GridList, {\n      cols: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, images.map(img => /*#__PURE__*/React.createElement(GridTile, {\n      title: img.tags,\n      key: img.id,\n      actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => handleOpen(img.largeImageURL),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ZoomIn, {\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img.largeImageURL,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    imageList = null;\n  }\n\n  const actions = [/*#__PURE__*/React.createElement(FlatButton, {\n    label: \"Close\",\n    primary: true,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  })];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: 50,\n      marginRight: 50,\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, imageList, /*#__PURE__*/React.createElement(Dialog, {\n    actions: actions,\n    modal: false,\n    open: open,\n    onRequestClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: currentImg,\n    alt: \"\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["C:/Users/91870/Desktop/imageSearchApp1/src/components/imageResults/imageResults.js"],"names":["React","useState","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","images","open","setOpen","currentImg","setCurrentImg","handleOpen","img","handleClose","imageList","map","tags","id","largeImageURL","actions","marginLeft","marginRight","marginTop","width","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GridList, GridTile } from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\n\r\nconst ImageResults = ({ images }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [currentImg, setCurrentImg] = useState('');\r\n\r\n  const handleOpen = (img) => {\r\n    setOpen(true);\r\n    setCurrentImg(img);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  let imageList;\r\n\r\n  if (images) {\r\n    imageList = (\r\n      <GridList cols={4}>\r\n        {images.map((img) => (\r\n          <GridTile\r\n            title={img.tags}\r\n            key={img.id}\r\n            actionIcon={\r\n              <IconButton onClick={() => handleOpen(img.largeImageURL)}>\r\n                <ZoomIn color=\"white\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <img src={img.largeImageURL} alt=\"\" />\r\n          </GridTile>\r\n        ))}\r\n      </GridList>\r\n    );\r\n  } else {\r\n    imageList = null;\r\n  }\r\n\r\n  const actions = [\r\n    <FlatButton label=\"Close\" primary={true} onClick={handleClose} />\r\n  ];\r\n\r\n  return (\r\n    <div style={{ marginLeft: 50, marginRight: 50, marginTop: 20 }}>\r\n      {imageList}\r\n      <Dialog\r\n        actions={actions}\r\n        modal={false}\r\n        open={open}\r\n        onRequestClose={handleClose}\r\n      >\r\n        <img src={currentImg} alt=\"\" style={{ width: '100%' }} />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ImageResults;\r\n\r\n"]},"metadata":{},"sourceType":"module"}